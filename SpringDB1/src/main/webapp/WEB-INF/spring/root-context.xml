<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation=
	"http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee.xsd
	http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">
	
	<!-- Root Context: defines shared resources visible to all other web components -->
	<jee:jndi-lookup jndi-name="jdbc/oracle" id="dataSource" resource-ref="true" />
	
	<!-- 스프링이 지원하는 트랜잭션 매니저를 등록한다.
	연동하려는 기술에 따라 트랜잭션 매니저 가 달라짐
	TransactionManager 란? 개발자가 트랜잭션을 직접처리하지않고,
	스프링 프레임워크가 트랜잭션을 처리할때 사용하는 객체
	
	연동기술-jdbc : DataSourceTransactionmanager
	연동기술 -hibernate : HibernateTransactionManager
	연동기술-mybatis : DataSourceTransactionmanager
								(mybatis 사실은 jdbc를제어하기때문임) -->
	<bean id="dataSourceTransactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<!-- 사용하려는 db종류와 트랜잭션 매니저를 연계한다. -->
		<property name="dataSource" ref="dataSource"></property>
	</bean>
	
	<!-- 스프링 연동 mybatis 설정 -->
	<bean id="sqlSessionFactoryBean" class="org.mybatis.spring.SqlSessionFactoryBean">
		<!-- 더이상 mybatis 설정 파일에서 데이터 소스를 얻어오면 안되고
		스프링이 취득한 데이터 소스를 얻어와야한다. -->
		<property name="dataSource" ref="dataSource"></property>
		<property name="configLocation" value="classpath:com/edu/db/mybatis/config.xml"></property>
	</bean>
	
	<!-- DAO가 주로사용했던 SqlSession은 mybatis-spring에서는 SqlSessionTemplate 자료형으로 표현된다. -->
	<bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg name="sqlSessionFactory" ref="sqlSessionFactoryBean"></constructor-arg>
	</bean>
	
	<context:component-scan base-package="com.edu.db.model.board" />
	
</beans>